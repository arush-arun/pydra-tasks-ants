[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "pydra-tasks-ants"
description = "Pydra tasks package for ANTs"
readme = "README.md"
requires-python = ">=3.11"
keywords = ["ants", "neuroimaging", "pydra", "registration"]
dependencies = [
  "pydra >=1.0a2",
  "fileformats >=0.15.4",
  "fileformats-datascience >=0.3.2",
  "fileformats-medimage >=0.10.5",
]
license = { file = "LICENSE" }
authors = [
  { name = "Ghislain Vaillant", email = "ghislain.vaillant@icm-institute.org" },
  { name = "Nipype developers", email = "neuroimaging@python.org" },
]
maintainers = [
  { name = "Nipype developers", email = "neuroimaging@python.org" },
]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: Apache Software License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Scientific/Engineering",
  "Topic :: Software Development :: Libraries",
]
dynamic = ["version"]

[project.urls]
Documentation = "https://github.com/nipype/pydra-ants#readme"
Issues = "https://github.com/nipype/pydra-ants/issues"
Source = "https://github.com/nipype/pydra-ants"

[project.optional-dependencies]
dev = ["black", "pre-commit"]
doc = [
  "packaging",
  "sphinx >=2.1.2",
  "sphinx_rtd_theme",
  "sphinxcontrib-apidoc ~=0.3.0",
  "sphinxcontrib-napoleon",
  "sphinxcontrib-versioning",
  "pydata-sphinx-theme >=0.13",
]
test = [
  "nipype2pydra >=0.5.0",
  "pytest >= 7.4",
  "pluggy >= 1.2",
  "pytest-cov >=4.1.0",
  "pytest-env",
  "pytest-xdist >=3.5.0",
  "pytest-rerunfailures",
  "codecov",
  "fileformats-extras",
  "fileformats-datascience-extras",
]

[tool.hatch.build]
packages = ["pydra"]

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "pydra/tasks/ants/_version.py"

# [tool.hatch.build.targets.wheel]
# include-only = ["pydra/tasks/ants"]

[tool.black]
target-version = ["py38"]
exclude = "_version.py"

[tool.codespell]
ignore-words = ".codespell-ignorewords"

[tool.flake8]
doctests = true
per-file-ignores = ["__init__.py:F401,F403"]
max-line-length = 88
select = "C,E,F,W,B,B950"
extend-ignore = ['E203', 'E501', 'E129', 'W503']

[tool.hatch.envs.default]
dependencies = ["pytest"]
[tool.hatch.envs.default.scripts]
test = "pytest {args}"

[[tool.hatch.envs.default.matrix]]
python = ["3.11", "3.12", "3.13"]

[tool.pytest.ini_options]
minversion = "6.0"
# addopts = ["--doctest-modules", "--doctest-continue-on-failure"]
testpaths = ["pydra/tasks/ants"]
log_cli_level = "INFO"
xfail_strict = true
addopts = [
  "-svv",
  "-ra",
  "--strict-config",
  "--strict-markers",
  # "--doctest-modules",
  # "--import-mode=importlib",
  # Config pytest-cov
  "--cov=pydra.tasks.ants",
  "--cov-report=xml",
  "--cov-config=pyproject.toml",
]
doctest_optionflags = "ALLOW_UNICODE NORMALIZE_WHITESPACE ELLIPSIS"
env = "PYTHONHASHSEED=0"
filterwarnings = ["ignore::DeprecationWarning", "ignore:The NumPy module was reloaded:UserWarning"]
junit_family = "xunit2"


[tool.ruff.lint]
ignore = ["FBT001", "FA100"]
